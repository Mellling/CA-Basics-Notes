//////////////////////////////////////////////////////////
// [메모리의 주소 공간]
//////////////////////////////////////////////////////////

// [ 물리 주소와 논리 주소 ] ////////////////////////////////

// 주소에는 메모리가 사용하는 물리 주소와 CPU가 실행 중인 프로그램이 사용하는 논리 주소가 있다.

// - 물리 주소 : 정보가 실제로 저장되어 있는 하드웨어상의 주소.
// - 논리 주소 : CPU가 실행 중인 프로그램 각각에게 부여된 0번지부터 시작되는 주소.

// - 프로그램마다 같은 논리 주소는 얼마든지 존재할 수 있다.
// - CPU는 이 논리 주소를 받아들이고, 해석하고, 연산한다.


// 정리하면 메모리가 사용하는 주소는 하드웨어상의 실제 주소인 물리 주소이며, CPU와 실행 프로그램이 사용하는 주소는 각각의 프로그램에 부여된 논리 주소이다.

// CPU가 메모리와 상호작용하려면 논리 주소와 물리 주소 간의 변환이 필요하다.

// → CPU와 주소 버스 사이에 위치한 메모리 관리 장치(MMU)라는 하드웨어에 의해 수행된다.

// MMU는 CPU가 발생시킨 논리 주소에 베이스 레지스터 값을 더하여 논리 주소를 물리 주소로 변환한다.

// 베이스 레지스터는 프로그램의 가장 작은 물리 주소, 즉 프로그램의 첫 물리 주소를 저장하는 셈이며, 논리 주소는 프로그램 시작점으로부터 떨어진 거리인 셈이다.

//////////////////////////////////////////////////////////

// [ 메모리 보호 기법 ] ////////////////////////////////////

// 다른 프로그램의 영역을 침범할 수 있는 명령어는 위험하기 때문에 논리 주소 범위를 벗어나는 명령어 실행을 방지하고 실행 중인 프로그램이 다른 프로그램에 영향을 받지 않도록 보호할 방법이 필요하다.← 이를 한계 레지스터가 담당한다.

// 한계 레지스터는 논리 주소의 최대 크기를 저장한다.

// → 즉, 프로그램의 물리 주소 범위는 베이스 레지스터 값 이상, 베이스 레지스터 값 + 한계 레지스터 값 미만이 된다.

// CPU는 메모리에 접근하기 전 항상 접근하고자 하는 논리 주소가 한계 레지스터의 값보다 작은지 검사한다.만약 접근하려고 할 시 인터럽트(트랩)이 발생한다.

// 정리 ---------------------------------------------------
// - 물리 주소는 메모리 하드웨어상의 주소, 논리 주소는 CPU와 실행 중인 프로그램이 사용하는 주소이다.
// - MMU는 논리 주소를 물리 주소로 변환한다.
// - 베이스 레지스터는 프로그램의 첫 물리 주소를 저장한다.
// - 한계 레지스터는 실행 중인 프로그램의 논리 주소의 최대 크기를 저장한다.
// --------------------------------------------------------