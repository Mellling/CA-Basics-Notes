//////////////////////////////////////////////////////////
// [컴퓨터 구조를 알아야 하는 이유]
//////////////////////////////////////////////////////////

// 컴퓨터 구조를 이해함으로써 문제 해결 능력을 향상 시킬 수 있으며, 문법만으로는 알기 어려운 성능, 용량, 비용을 고려하는 개발자로 성장할 수 있다.
// 컴퓨터를 미지의 대상에서 분석의 대상으로 인식하게 되는 것이다.

// [ 문제 해결 ] //////////////////////////////////////////

// 프로그램은 동일한 코드라 하더라도 컴퓨터 환경에 따라 정상적으로 작동하거나 그렇지 않을 때가 종종 있다.이러한 문제는 단순히 코드상의 문법 오류만이 원인은 아닐 것이다.

// 하지만 프로그래밍 언어의 문법만 알고 있는 경우, 문제의 원인을 파악하고 해결책을 찾는 데 어려움을 겪을 수 있다.
// 반면, 컴퓨터 구조를 이해하고 있다면 문제 상황을 빠르게 진단할 수 있고, 문제해결의 실마리를 다양하게 찾을 수 있다.

// 이처럼 컴퓨터 구조에 대한 지식은 단순히 코드를 작성하는 개발자를 넘어, 다양한 문제를 스스로 해결할 수 있는 역량을 갖춘 개발자로 성장하는 데 중요한 밑거름이 된다.

//////////////////////////////////////////////////////////

// [ 성능, 용량, 비용 ] ////////////////////////////////////

// 예를 들어, 서버 컴퓨터가 필요한 상황을 생각해 보자.단순히 가격이 저렴한 제품을 선택하면 성능 부족으로 곤란한 상황에 처할 수 있다.
// 반대로, 무조건 최신 제품을 선택하면 비용이 수백만 원에서 수천만 원까지 치솟을 수 있다.이처럼 예산이 한정된 상황에서 비싼 컴퓨터가 항상 최선의 선택은 아니다.

// 서버 컴퓨터 대신 클라우드 서비스를 이용한다고 해서 이러한 고민에서 완전히 벗어날 수 있는 것도 아니다.
// 어떤 CPU를 선택할지, 메모리 용량은 얼마나 필요한지 등을 직접 판단해야 하며, 선택에 따라 성능, 용량, 비용이 크게 달라진다.

// 이처럼 성능, 용량, 비용 문제를 해결하려면 프로그래밍 언어의 문법 지식만으로는 부족하다.
// 컴퓨터 구조에 대한 이해는 단순히 입력과 출력에만 집중하는 개발을 넘어, 성능과 비용 효율을 고려한 현명한 결정을 내리는 개발자로 성장하는 데 필수적인 요소다.